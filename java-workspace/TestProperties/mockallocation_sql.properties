#####################################################################
#
#   Name        : mockallocation_sql.properties
#
#   Author      : Infosys 
#
#   Date        : Feb 2005
#
#   Description : This properties file has the SQL queries.
#
#
#####################################################################

#### Start - Sql Properties

#Validate user
VALIDATE_USER=SELECT emp_id FROM employee WHERE emp_id = ? and password = ?

#check if this employee exists
CHECK_EXIST_EMPLOYEE=SELECT emp_id FROM employee WHERE emp_id = ?

#get employee's base information
GET_EMPLOYEE_INFO=SELECT e.emp_id, e.emp_name, e.gender_code, g.gender_value, \
                         e.birthday, e.address, e.mobile, e.position_code, \
                         p.position_value, e.email \
                  FROM   employee e, gender g, position p \
                  WHERE  e.gender_code = g.gender_code AND \
                         e.position_code = p.position_code AND \
                         e.emp_id = ?

#get unallocated employees
GET_UNALLOC_EMPLOYEE_LIST=SELECT e.emp_id, e.emp_name, e.gender_code, \
                                 g.gender_value, e.birthday, e.address, \
                                 e.mobile, e.position_code, \
                                 p.position_value, e.email \
                          FROM   employee e, gender g, position p \
                          WHERE e.gender_code = g.gender_code AND \
                                e.position_code = p.position_code AND \
                                e.position_code = ? AND \
                                NOT EXISTS( SELECT emp_id \
                                            FROM emp_app ea \
                                            WHERE e.emp_id = ea.emp_id \
                                          )

#get developer employees at the specified application
GET_DV_EMPLOYEE_LIST_AT_APP=SELECT e.emp_id, e.emp_name, e.gender_code, \
                                   g.gender_value, e.birthday, e.address, \
                                   e.mobile, e.position_code, \
                                   p.position_value, e.email \
                            FROM   employee e, gender g, position p, emp_app ea \
                         WHERE  e.gender_code = g.gender_code AND \
                                e.position_code = p.position_code AND \
                                e.position_code = ? AND \
                                e.emp_id = ea.emp_id AND \
                                ea.app_id = ? 
#get module leader at the specified application
GET_ML_EMPLOYEE_INFO=SELECT e.emp_id, e.emp_name, e.gender_code, \
                            g.gender_value, e.birthday, e.address, \
                            e.mobile, e.position_code, \
                            p.position_value, e.email \
                     FROM   employee e, gender g, position p, emp_app ea \
                     WHERE  e.gender_code = g.gender_code AND \
                            e.position_code = p.position_code AND \
                            e.position_code = ? AND \
                            e.emp_id = ea.emp_id AND \
                            ea.app_id = ? 

#insert a new employee
INSERT_EMPLOYEE=INSERT INTO employee \
                           (emp_id, emp_name, gender_code, \
                            birthday, email, address, \
                            mobile, position_code, password) \
                    VALUES (?, ?, ?, \
                            ?, ?, ?, \
                            ?, ?, ?)

#update a existed employee 
UPDATE_EMPLOYEE=UPDATE employee \
                SET    emp_name = ?, \
                       gender_code = ?, \
                       birthday = ?, \
                       email = ?, \
                       address = ?, \
                       mobile = ?, \
                       position_code = ? \
                WHERE  emp_id = ?

#delete a existed employee
DELETE_EMPLOYEE=DELETE \
                FROM  employee \
                WHERE emp_id = ?


#check if this application exists
CHECK_EXIST_APPLICATION=SELECT app_id FROM employee WHERE app_id = ?

#get application's detail information
GET_APP_INFO=SELECT a.app_id, a.app_name, a.start_date, a.end_date, \
                    a.planned_dv_count, a.status, \
                    ( SELECT count(*) FROM emp_app ea, employee e \
                       WHERE ea.app_id = a.app_id AND \
                             ea.emp_id = e.emp_id AND \
                             e.position_code = ? \
                    ) current_dv_count \
             FROM   application a \
             WHERE  a.app_id = ?

#get ML's current applicaton list
GET_CURRENT_APP_LIST=SELECT a.app_id, a.app_name, a.start_date, a.end_date, \
                            a.planned_dv_count, a.status, \
                            ( SELECT count(*) FROM emp_app ea, employee e \
                               WHERE ea.app_id = a.app_id AND \
                                     ea.emp_id = e.emp_id AND \
                                     e.position_code = ? \
                            ) current_dv_count \
                     FROM   application a, emp_app ea \
                     WHERE  a.app_id = ea.app_id AND \
                            a.end_date >= TODAY AND \
                            ea.emp_id = ?


#get ML's overdue applicaton list
GET_OVERDUE_APP_LIST=SELECT a.app_id, a.app_name, a.start_date, a.end_date, \
                            a.planned_dv_count, a.status, \
                            ( SELECT count(*) FROM emp_app ea, employee e \
                               WHERE ea.app_id = a.app_id AND \
                                     ea.emp_id = e.emp_id AND \
                                     e.position_code = ? \
                            ) current_dv_count \
                     FROM   application a, emp_app ea \
                     WHERE  a.app_id = ea.app_id AND \
                            a.end_date < TODAY AND \
                            ea.emp_id = ? 


#get employee(DV)'s application detail information
GET_DV_APP=SELECT a.app_id, a.app_name, a.start_date, a.end_date, \
                  a.planned_dv_count, a.status, \
                  ( SELECT count(*) FROM emp_app ea, employee e \
                    WHERE ea.app_id = a.app_id AND \
                          ea.emp_id = e.emp_id AND \
                          e.position_code = ? \
                  ) current_dv_count \
           FROM   application a, emp_app ea \
           WHERE  a.app_id = ea.app_id AND \
                  ea.emp_id = ?

#insert a new application
INSERT_APPLICATION=INSERT INTO application \
                           (app_id, app_name, start_date, end_date, \
                            planned_dv_count, status) \
                    VALUES (?, ?, ?, ?, \
                            ?, ?)

#update a existed application
UPDATE_APPLICATION=UPDATE application \
                   SET    app_name = ?, \
                          start_date = ?, \
                          end_date = ?, \
                          planned_dv_count = ?, \
                          status = ? \
                   WHERE app_id = ?


#delete a existed application
DELETE_APPLICATION=DELETE \
                   FROM  application \
                   WHERE app_id = ?


#delete allocation according to the specified emp_id and app_id
DELETE_ALLOCATION=DELETE \
                  FROM  emp_app \
                  WHERE emp_id = ? AND \
                        app_id = ?
                  
#delete allocation according to the specified app_id
DELETE_ALLOCATION_AT_APP=DELETE \
                         FROM  emp_app \
                         WHERE app_id = ?

#insert allocation according to the specified emp_id and app_id
INSERT_ALLOCATION=INSERT INTO emp_app(emp_id, app_id) \
                  VALUES(?, ?)

                  

#####################################################################

#### End - Sql Properties

