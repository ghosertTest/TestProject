<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC 
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<!--

  Demonstrates the use of property-ref to map legacy data where
  foreign keys reference something other than the primary key of
  the associated entity. Here we show:
  
  (1) A one-to-one foreign key association (prefer primary key 
      associations)
      
  (2) A bidirectional one-to-many association on a key that is
      not the primary key (prefer associations from foreign keys
      to primary keys)

-->

<hibernate-mapping package="org.hibernate.test.propertyref">

	<class name="Person">
		
		<id name="id">
			<generator class="hilo"/>
		</id>
		
		<property name="name" length="100"/>
		
		<one-to-one name="address" 
			property-ref="person"
			cascade="all"
			fetch="join"/>
		
		<set name="accounts" 
			inverse="true">
			<key column="userId"
				property-ref="userId"/>
			<one-to-many class="Account"/>
		</set>
		
		<property name="userId" column="person_userid" length="8" unique="true"/>
	
	</class>

	<class name="Address">
	
		<id name="id">
			<generator class="hilo"/>
		</id>
	
		<property name="address" length="300"/>
		<property name="zip" length="5"/>
		<property name="country" length="25"/>
		<many-to-one name="person" unique="true" not-null="true"/>
	
	</class>
	
	<class name="Account">
		<id name="accountId" length="32">
			<generator class="uuid.hex"/>
		</id>
		
		<many-to-one name="user" 
			column="userId"
			property-ref="userId"/>
		
		<property name="type" not-null="true"/>
		
	</class>
	
	<class name="Group" table="`Group`">
		<id name="name"/>
		<set name="users" table="UserGroup">
			<key column="groupName"/>
			<many-to-many column="userId" class="Person" property-ref="userId"/>
		</set>
	</class>

</hibernate-mapping>